package com.zavan.dedesite.model;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import jakarta.persistence.*;
import jakarta.validation.constraints.Size;
import java.time.LocalDateTime;
import org.hibernate.annotations.CreationTimestamp;

@Entity
@Table (name = "post")
public class Post {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;
    
    @Size(max = 255, message = "O título não pode ter mais que 255 caracteres")
    @Column(length = 255, nullable = false)
    private String title;
    
    @Lob
    @Column(name = "content", columnDefinition = "TEXT", nullable = false)
    private String content_md;
    
    @Column(columnDefinition = "TEXT")
    private String content_html;

    private LocalDateTime createdAt = LocalDateTime.now();
    private LocalDateTime updatedAt = LocalDateTime.now();
    //@CreationTimestamp
    //@Column(name = "created_at", nullable = false, updatable = false)
    //private LocalDateTime createdAt;

    @ManyToOne(fetch = FetchType.LAZY)
    @JoinColumn(name = "user_id", nullable=false)
    @JsonIgnoreProperties({"hibernateLazyInitializer", "handler"})
    private User author;

    // Getters e Setters

    public Long getId() { return id; }

    public void setId(Long id) { this.id = id; }

    public String getTitle() { return title; }

    public void setTitle(String title) { this.title = title; }

    public String getContent() { return content_md; }

    public void setContent(String content) { this.content_md = content; }

    public String getContentHtml() { return content_html; }

    public void setContentHtml(String contentHtml) { this.content_html = contentHtml; }

    public LocalDateTime getCreatedAt() { return createdAt; }

    public void setCreatedAt(LocalDateTime createdAt) { this.createdAt = createdAt; }

    public User getAuthor() { return author; }

    public void setAuthor(User author) { this.author = author; }
}